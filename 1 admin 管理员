%
Linux之父  林纳斯.托瓦斯  1991年创办    unix  1970.1.1

		80     http:超文本传输协议
         	443    https:安全超文本传输协议
         	53     DNS:域名解析协议
         	21     FTP:文件传输协议
         	23     telnet:远程管理协议
		25     SMTP:邮件协议(用户发邮件协议)
         	110    pop3:邮件协议(用户收邮件协议)
         	69     TFTP:简单文件传输协议
         	161    SNMP:简单的网络管理协议
         	3306   mysql:数据库端口
         	22     ssh远程控制端口

##############################################################################################
##############################################################################################
常见一级目录的用途
			/boot					//存放系统引导必需的文件,包括内核、启动配置
			/bin、/sbin         		//存放各种命令程序
			/dev                		//存放硬盘、键盘、鼠标、光驱等各种设备文件
			/etc                		//存放Linux系统及各种程序的配置文件
			/root、/home/   			//分别是管理员root、普通用户的默认家目录
			/var                		//存放日志文件、邮箱目录等经常变化的文件
			/proc               		//存放内存中的映射数据,不占用磁盘
			/tmp                		//存放系统运行过程中使用的一些临时文件

############################################################################################
############################################################################################       
	/etc/passwd 					//用户基本信息
	/etc/shadow						//用户密码信息
	/etc/group 						//组基本信息
	/etc/gshadow					//组成员信息
	/etc/sysconfig/network-scripts/ifcfg-eth0	//网卡配置文件
	/etc/hostname					//主机名永久配置文件
	/etc/bashrc						//所有用户永久设置别名文件
	/root/.bashrc					//root用户永久设置别名文件
	/etc/fstab						//开机自动挂载配置文件
	/etc/resolv.conf					//DNS配置文件
	/etc/yum.repos.d/*.repo				//YUM客户端配置文件
	/etc/selinux/config				//防火墙配置文件
 	/var/ftp						//FTP默认共享路径 
	/etc/chrony.conf					//NTP时间同步配置文件
	/etc/crontab					//cron计划任务配置文件
	/etc/selinux/config 				//SELinux永久配置文件 
	/etc/samba/smb.conf				//Samba服务端配置文件	软件包samba
	　　　　　　　　 					//Samba客户端共享软件包	samba-client 
										挂载软件包 	cifs-utils
	/etc/exports　　　　　  				//NFS服务端配置文件		软件包nfs-utils
	/etc/postfix/main.cf        			//postfix邮件配置文件	软件包postfix
	targetcli　						//ISCSI服务端软件包
	/etc/iscsi/initiatorname.iscsi     		//ISCSI客户端配置文件
								软件包iscsi-initiator-utils
	/etc/httpd/conf/httpd.conf			//域名web配置文件
	/etc/httpd/conf.d/*.conf     			//域名虚拟web配置文件	软件包mod_wsgi
	/etc/httpd/conf.d/ssl.conf    			//安全Web服务器配置文件	加密软件包mod_ssl
	/etc/dhcp/dhcpd.conf				//dhcp配置文件

#############################################################################################
	hd,表示IDE设备         	/dev/hdc   IDE接口
	sd,表示SCSI设备            	/dev/sr0   SCSI接口
	vd,表示虚拟设备
	LANG=en　　　　      				//当前系统语言修改英文
	ls -l /dev/cdrom      				//显示磁盘详细信息
	cat  /proc/meminfo    				//真机查看检查内存大小、空闲情况
	nmcli connection show  				//查询识别的网卡名称
	date -s                				//修改时间（'年-月-日  时：分：秒'）
	lscpu | grep vmx       				//查看CPU是否支持虚拟化(vmx)
	du -h                  				//查看大小
	wc -l                  				//统计行数
	which							//查找命令的绝对路径
	uniq							//忽略文件中的重复行	-c 显示重复的次数
	sort							//将文件排序输出 	-r 相反顺序排序
	strings /dev/random				//查看随机数

软件包
	bash-completion					//tab
	net-tools						//netstat ifconfig
	vim-enhanced					//vim
	psmisc						//pstree
	iproute						//ip
	lrzsz							//xshell使用

#############################################################################################
进程管理
	pstree -ap lisi				//查看lisi用户开启的进程 
							//-a 显示完整的命令行
							//-p 列出对应PID编号
	用户 进程ID %CPU %内存 虚拟内存 固定内存 终端 状态 起始时间 CPU时间 程序指令
	ps  aux           	 		//列出正在运行的所有进程
	ps -elf          	 			//列出正在运行的所有进程

#############################################################################################
检索进程
	pgrep [选项]  查询条件            
	-l			//输出进程名,而不仅仅是 PID
	-U			//检索指定用户的进程 

############################################################################################
进程动态排名
	top -d 刷新秒数 -U 用户名   
  	P(大写)		//进行CPU排序
  	M(大写)		//进行内存排序

#############################################################################################
进程的前后台调度
	jobs -l		//查看后台任务列表
	bg 2        	//将后台编号为2的进程,继续运行 
	fg 1           	//将后台编号为1的进程,恢复到前台运行
	Ctrl + z      	//暂停并转入后台
	sleep 1000 &    	//将进程正在运行放入后台

#############################################################################################
杀死进程方法
	kill -9  PID
	killall -9  进程名
	killall -9 -u lisi //强制踢出一个用户

#############################################################################################
grep常用的匹配模式
	-v         		//取反匹配
	-i          	//忽略大小写
	aaa　      		//包含字符串aaa
	^aaa 　    		//以字符串aaa开头
	aaa$ 　    		//以字符串aaa结尾
	*            		//任意多个任意字符
	?            		//单个字符
	[ 0-9 ]        		//多个字符或连续范围中的一个
	{a,b,}    		//多组不同的字符串,全匹配 

############################################################################################
find常用条件表示:
	-type       	//类型			l 快捷方式 d 目录 f 文本文件
	-name      		//'文档名称'		find /etc/ -name 'passwd' 
	-iname      	//忽略大小写		find /etc -iname 'PASSWD'
	-size       	//文件大小k、M、G	find /boot/  -size  +10M
	-user       	//用户名		find /home -user  student
	-mtime      	//根据文件修改时间	find /var/ -mtime +90	//90天以前
	-group      	//根据所属组		find /home/ -group 'student'
	-maxdepth   	//限制目录查找的深度(最大层数)(find /etc/ -maxdepth 1 -name '*.conf')
	find扩展         	//find ... -exec 处理命令 {}   路径   \;

#############################################################################################
管理用户和组  
	root  :    x   : 0 :     0    :   root   : /root : /bin/bash
	用户名 密码占位符  UID  基本组的GID 用户描述信息   家目录     解释器

	useradd		//创建用户
	usermod		//修改用户信息
	userdel        	//删除用户	-r 连同家目录一并删除
		-u		//用户id
		-d   		//家目录路径
		-s   		//登录解释器(/sbin/nologin：禁止用户登录系统的解释器)
		-G  	 	//附加组
	echo '密码'   |  passwd --stdin root		//非交互式设置密码

############################################################################################
管理组账号
	stugrp :	x	:	1610	:
  	  组名    组的密码占位符   组的GID编号 组的成员列表
	groupadd       		//创建组
	groupmod        		//修改组属性		groupmod [-g 组ID] [-n 新组名] 组名
	groupdel              	//删除组
	gpasswd -a 用户名 组名   	//添加用户到组
	gpasswd -d 用户名 组名   	//删除用户所在组
	
############################################################################################
设置acl访问控制策略
	getfacl 				//查看ACL策略
	setfacl -m u:用户:rwx 文档		//设置ACL策略
	setfacl -m g:组名:rwx 文档
	setfacl -b 文档             	//删除所有ACL策略
	setfacl -x u:用户   文档      	//删除单条指定ACL策略

############################################################################################
查看权限                      							Permission denied:权限不足
			d 目录 	l 快捷方式	- 文本文件
权限的数值表示
	基本权限:	r = 4		w = 2		x = 1
	附加权限: 	SUID = 4   	SGID = 2  	Sticky Bit = 1

	chmod 777        		//设置基本权限
	chown root:root        	//设置文档归属
	chmod u+s     		//可以让使用者具有文件属主的身份及权限		Set UID
	chmod g+s     		//使目录下新增的文档自动设置与父目录相同的属组	Set GID
	chmod o+t     		//附加在其他人的 x 位上(禁止操作别人的文档）    	Sticky Bit

############################################################################################
tar备份与恢复
	-c          		//创建tar包
	-x          		//释放tar包
	-f          		//指定tar包文件名称
	-t          		//显示tar包的文件清单
	-C(大写)     		//指定释放路径
	tar -tf     		//查看包里面内容
	tar -xf     		//释放包里面内容
	-zcf ------------------->.gz
	-jcf ------------------->.bz2
	-Jcf ------------------->.xz

#############################################################################################
zip归档工具									跨平台的压缩工具
	zip -r /root/aaa.zip /home/ /mnt/ 		//压缩
	unzip  /root/aaa.zip  -d  /opt			//解压缩

#############################################################################################
rsync同步
		-n				//测试同步过程,不做实际修改
		-a				//归档模式,相当于 -rlptgoD
		-v				//显示详细信息
		-z				//传输过程启用压缩
		--delete			//删除目标文件夹内多余的文档
	rsync -avz --delete /opt 192.168.1.1:/opt/

##############################################################################################
实时同步					安装inotify-tools                                       

	scp /linux-soft/01/tools.tar.gz  192.168.4.7:/root
	yum -y install  gcc  make
	tar -xf /root/tools.tar.gz -C /ooo
	tar -xf /ooo/tools/inotify-tools-3.13.tar.gz -C /opt
	cd /opt/inotify-tools-3.13/
	./configure 
	make && make install
	ls /usr/local/bin/inotifywait 

inotifywait  [选项]  目标文件
	常用选项
		-m			//持续监控(捕获一个事件后不退出)
		-r			//递归监控、包括子目录及文件
		-q			//减少屏幕输出信息
		-e			//指定监视的 modify、move、create、delete、attrib等事件类别

	vim /opt/rsync.sh
	#!/bin/bash
	while  inotifywait  -rqq  /ooo
	do
		rsync -avz --delete /ooo 192.168.1.1:/opt/
	done
	chmod +x /opt/rsync.sh
	/opt/rsync.sh

#############################################################################################       
历史命令
	history     			//查看历史命令列表
	-c          			//清空历史命令
	!cat        			//执行最近一次以cat开头的历史命令
	vim /etc/profile			//调整历史命令的数量
	HISTSIZE=1000			//默认记录1000条

############################################################################################
软连接与硬连接
	软链接		//原始文件被删除,链接将失效,软连接可存放在不同分区
	硬链接		//原始文件被删除,连接仍可用,硬连接与原始文件必须在同一分区
	ln -s  /opt/A   /B       	//软连接
	ln     /opt/A   /C       	//硬连接
	ls -i  /opt/

#############################################################################################
vim命令快捷键

命令模式:
	去首部  (gg)		去尾部  (G)
	复制行  (yy)		粘贴到当前行之后 (p)
	删除行  (dd)
	删除单个字符  （x或Delete）
	删除到行首    （d^）	删除到行尾（d$）
	删除光标之后   (大C)
	查找关键词     (/n)
	撤销上一次操作 (u)
	保存修改并退出 (ZZ)
末行模式:
	:set  nu|nonu       		//显示/不显示行号
	:set  ai|noai       		//启用/关闭自动缩进
	:r /etc/password     		//读入其他文件内容
字符串替换
	:s/root/admin        		//替换光标所在行第一个root
	:s/root/admin/g      		//替换光标所在行所有的root
	:1,10s/root/admin/g  		//替换第1-10行所有的root
	:%s/root/admin/g     		//替换文件内所有的root

#############################################################################################
Yum
	vim  /etc/yum.repos.d/*.repo
	[aaa]					//仓库标识　　
	name=　　　   			//仓库描述信息
	enabled=1　　　　  			//本文件是否生效
	gpgcheck=0　　　   		//不检测软件包的签名
	baseurl=  				//指定Yum服务端在哪里

	yum repolist             	//列出仓库信息
	yum -y install           	//安装软件包
	yum -y remove        		//卸载软件包
	yum list				//显示所有软件包信息
	yum clean all　  　   		//清空缓存
	yum provides			//查询命令所需要的软件包
	wget 软件包网址 -O(大写) /路径	//下载软件包
	rpm -ql              		//查看软件安装的路径内容
	rpm -qa         			//显示所有已安装
	rpm -ivh 				//安装软件包
	rpm -e 				//卸载软件

自定义Yum仓库					光盘默认的文件系统为iso9660
	createrepo /ooo			//创建仓库数据文件
	createrepo --update /ooo		//更新仓库

#############################################################################################
fdisk分区
	lsblk					//识别硬盘
	fdisk					//分区规划
	partprobe				//刷新分区
	mkfs.xfs|ext4			//进行格式化 
	blkid					//查看文件系统类型 
	mount					//挂载使用
	df -h					//显示磁盘信息
	/etc/fstab 的记录格式
	设备路径	挂载点		类型		参数		备份标记	检测顺序

#############################################################################################
parted分区 					支持大容量（18EB）,gpt分区模式可以有128个主分区
	parted  /dev/vdb
	(parted) mktable gpt		//指定分区的模式
	(parted) print               	//输出所有分区信息
	(parted) unit GB            	//设置显示单位
	(parted) mkpart             	//划分新的分区
	(parted) quit             	//退出

############################################################################################
交换空间: 缓解真实物理内存的压力,由硬盘的空间来组成
	mkswap /dev/vdb1         	//格式化交换分区
	swapon  /dev/vdb1            	//启用交换分区
	swapon  -s                  	//查看交换空间的成员
	swapoff  /dev/vdb1           	//停用交换分区
	vim  /etc/fstab			//开机自动启用交换分区
	/dev/vdb1 swap swap defaults 0 0
	swapon -a                 	//自动检测/etc/fstab文件swap分区

###########################################################################################
LVM逻辑卷        display显示      create创建      extend扩展        remove删除

	vgdisplay  卷组名             		//显示卷组详细信息
	vgchange -s 1M  卷组名    			//修改卷组PE的大小

逻辑卷制作
	vgcreate [-s]  卷组名  设备路径		//创建卷组		-s 指定PE大小
	lvcreate [-l] -L -n  卷组路径		//创建逻辑卷		-l 指定PE个数  -L 卷大小  -n 卷名 
逻辑卷扩展
	vgextend  卷组名  设备路径			//扩展卷组的空间
	lvextend  -L    逻辑卷路径		//扩展逻辑卷大小	-L 卷大小
	resize2fs 逻辑卷路径			//扩展ext4文件系统
	xfs_growfs  逻辑卷路径			//扩展xfs文件系统

#############################################################################################
NTP时间同步
	安装chrony
	修改配置文件/etc/chrony.conf
	重启服务chronyd

############################################################################################
cron计划任务
	cronie、crontabs			//软件包
	crond					//服务名
	/var/log/cron			//日志文件
	crontab -e -u 			//编辑计划任务
	crontab -l -u       		//查看计划任务
	crontab -r -u      		//清除
	* * * * * date >> /opt/a.txt	//每分钟记录当前系统的时间
	* 			//匹配范围内任意时间
	,   			//分隔多个不连续的时间点
	-   			//指定连续时间范围
	/n 			//指定时间频率

############################################################################################
LDAP认证
     	网络用户：由网络中一台服务器提供用户名、密码
	安装sssd客户端软件
	安装图形工具 authconfig-gtk 并运行该软件

选择LDAP
   	dc=example,dc=com       		//指定服务端域名
   	classroom.example.com          //指定服务端主机名
	勾选TLS加密
	使用证书加密:  http://classroom.example.com/pub/example-ca.crt
	选择LDAP密码

   	systemctl restart sssd
   	grep ldapuser0 /etc/passwd

############################################################################################
家目录漫游
	showmount -e classroom.example.com			//查看服务端有那些共享文件夹
    	mkdir /home/guests					//利用mount提供访问点
    	mount classroom.example.com:/home/guests/ /home/guests
    	ls /home/guests

############################################################################################
	<marquee><font color=red><h1>NSD1903
	   滚动          字体颜色  红色      标题字体
############################################################################################
FTP
	1.安装vsftpd
	2.重启vsftpd服务
	3.验证FTP　　		firefox ftp://172.25.0.11

############################################################################################
############################################################################################
############################################################################################
防火墙策略		firewalld软件包
	管理工具	firewall-cmd（命令）	firewall-config（图形）
		setenforce 0		//修改当前SELinux状态
		getenforce         	//查看当前SELinux状态
预设安全区域
		public			//仅允许访问本机的sshd  ping  dhcpd服务
		trusted                	//允许任何访问
		block                  	//阻塞任何来访请求
		drop                   	//丢弃任何来访的数据包

	firewall-cmd --get-default-zone					//查看默认区域
	firewall-cmd --set-default-zone=block                 		//修改默认区域
	firewall-cmd --zone=public --list-all                     	//查看区域规则
	firewall-cmd --zone=public --add-service=http   			//添加协议
	firewall-cmd --permanent --zone=...                     	//永久添加策略
	firewall-cmd --reload                                      	//重新加载所有防火墙策略
	firewall-cmd --zone=block --add-source=172.25.0.10        	//单独拒绝 ip 访问
	f... --zone=public --add-forward-port=port=5423:proto=tcp:toport=80     //端口转发5423=80
	f... --zone=public --remove-forward-port=port=5423:proto=tcp:toport=80  //删除端口转发

###############################################################################################
###############################################################################################
###############################################################################################
聚合连接	NetworkManager软件包
1.创建 虚拟网卡       		
	man teamd.conf       	//查看帮助信息
	nmcli connection add type team con-name team0 ifname  team0  
	autoconnect yes  config '{"runner": {"name": "activebackup"}}'  
         				配置网卡绑定工作模式    热备份方式 
2.添加成员
	nmcli connection add type team-slave con-name team0-1 ifname eth1 master team0
	nmcli connection add type team-slave con-name team0-2 ifname eth2 master team0

3.配置team0的IP地址
	nmcli connection modify team0 ipv4.method manual ipv4.addresses 192.168.1.1/24
	connection.autoconnect yes		

4.激活所有配置
	nmcli connection up team0
	nmcli connection up team0-1
	nmcli connection up team0-2

5.验证
	teamdctl team0 state       		//查看team0详细信息
	ifconfig eth1 down          		//禁用网卡
	teamdctl team0 state			//查看网卡状态
	nmcli  connection  delete team0  	//删除虚拟网卡team0

###############################################################################################
###############################################################################################
iscsi网络磁盘   			 (防火墙设为trusted )(划分分区)

服务端：
	yum -y install targetcli						//安装软件包
	targetcli
	backstores/block  create  nsd  /dev/vdb1       		//指定后端存储是那个分区
	iscsi/ create iqn.2018-16.com.example:server0        	//创建箱子并起名
             	 (iqn.yyyy-mm.倒序域名:自定义标识)
	iscsi/iq.../luns create /backstores/block/nsd		//将后端存储，放入箱子中
	iscsi/iq.../acls create iqn.2018-16.com.example:test	//设置ACL访问控制(客户端声称的名字)
	iscsi/iq.../portals create  172.25.0.11			//设置提供服务的IP地址
	exit   								//保存并退出
	systemctl  restart  target					//重起服务
	systemctl  enable   target

客户端：
	iscsi-initiator-utils.i686					//安装客户端软件包
	vim  /etc/iscsi/initiatorname.iscsi
	InitiatorName=iqn.2018-16.com.example:test			//客户端声称的名字
	systemctl restart iscsid						//重启服务
	systemctl daemon-reload
	iscsiadm --mode discoverydb --type sendtargets --portal IP --discover   //man iscsiadm
	iscsiadm -m discovery -t st -p IP				//发现磁盘
	iscsiadm -m node -L all						//连接磁盘
	vim /var/lib/iscsi/nodes/iqn.../*/default
	node.conn[0].startup = automatic				//把 manual 改成 automatic
	systemctl restart iscsi						//重起iscsi服务
	lsblk

###############################################################################################
###############################################################################################
Samba共享						跨平台的共享，Windows与Linux的共享

	pdbedit -a  harry         		//添加用户
	pdbedit -L  harry         		//查询用户
	pdbedit -x  harry         		//删除用户
	pdbedit -L                   		//查看所有Samba共享帐号
	vim /etc/samba/smb.conf
	path = 					//文件夹绝对路径
	write list　= 				//允许写权限的用户名
	getsebool -a | grep samba		//查看布尔值
	setsebool -P samba_export_all_rw=on	//修改布尔值
	
##############################################################################################
samba步骤

服务端
	1.安装软件包
	2.建立Samba共享验证的用户
	3.创建共享目录与文件     
	4.修改配置
	5.重起smb服务
	6.修改SELinux布尔值
	7.修改ACL访问权限(读写设置)            	setfacl -m  u:dc:rwx  /aaa
客户端
	1.安装访问共享软件包				samba-client	cifs-utils
	2.查看服务端samba共享        		smbclient -L //IP
	3.以用户身份，访问服务端samba共享       	smbclient -U harry //IP/aaa
	4.创建挂载目录
	5.设置开机自动挂载
	//172.25.0.11/aaa /ooo cifs defaults,user=harry,pass=123,_netdev 0 0

multiuser机制,sec=ntlmssp,提供NT局域网管理安全支持 	(普通用户可以切换成权限较大的用户来临时获取写的权限)
客户端
	vim  /etc/fstab
	//IP/aaa /ooo cifs defaults,user=dc,pass=123,_netdev,multiuser,sec=ntlmssp 0 0
	mount -a
	su - student
	cifscreds add -u dc IP
	ls /ooo

#############################################################################################
#############################################################################################
NFS共享

服务端
	nfs-utils						//安装软件包
	mkdir /aaa
	vim /etc/exports
	/aaa     *(rw)                  		//共享目录路径客户端(权限)
	systemctl restart nfs-server			//重启服务
	systemctl enable  nfs-server
客户端
	nfs-utils						//安装软件包
	systemctl restart nfs
	mkdir /ooo
	vim   /etc/fstab
	Ip:/aaa  /ooo  nfs  defaults,_netdev  0  0
	mount -a

#############################################################################################
#############################################################################################
邮件服务     　 SMTP:用户发邮件协议  25           pop3:用户收邮件协议  110

	yum -y install postfix mailx			//安装软件包
	vim  /etc/postfix/main.cf 
99 行	myorigin = server0.example.com    		//发件来源
116 行	inet_interfaces = all                 	//允许本机所有网卡
164 行	mydestination = server0.example.com  	//判断为本域邮件
317 行	relayhost = [xxx]					//后端邮件服务器
	systemctl restart postfix			//重启服务

	mail  -s  '邮件标题'   -r  发件人  收件人		//发信操作
	mail  -u    用户名					//收信操作
	echo xixi|mail -s 'xixi' -r dc tc		//非交互式发邮件

#######################################################################################
#######################################################################################
systemctl控制
	配置目录:	/etc/systemd/system/
	服务目录:	/usr/lib/systemd/system/

服务的控制
	systemctl restart  				//重起服务
 	systemctl start        				//开启服务
 	systemctl stop         				//停止服务
 	systemctl status      				//查看当前的状态
 	systemctl enable       				//设置开机自启动
 	systemctl disable      				//设置不开机自启动

RHEL6 运行级别    
         0：关机    
         1：单用户模式（基本功能的实现，破解Linux密码）
	 2：多用户字符界面（不支持网络）    
	 3：字符界面   
	 4：未定义
	 5：图形界面   
	 6：重起 
	切换运行级别：init  5  

RHEL7 运行模式 
	systemctl isolate multi-user.target		//当前切换到字符模式
	systemctl isolate graphical.target		//当前切换到图形模式
	systemctl get-default				//查看开机默认进入模式
	systemctl set-default multi-user.target	//永久设置开机自动进入图形模式

########################################################################################
########################################################################################
RAID磁盘阵列
	RAID 0		//条带模式		并行写入以提高效率,至少由两块磁盘组成
	RAID 1		//镜像模式		一个文档复制成多份,至少由两块磁盘组成
	RAID 5		//高性价比模式	需要至少一块磁盘的容量来存放校验数据,至少由三块磁盘
	RAID 6		//可靠模式		需要至少两块磁盘的容量来存放校验数据,至少由四块磁盘
	RAID 0+1/RAID 1+0	//并行存取提高效率、镜像写入提高可靠性,至少由四块磁盘组成

#########################################################################################
日志管理

常见的日志文件
	/var/log/messages  	//记录内核消息、各种服务的公共消息
	/var/log/dmesg 		//记录系统启动过程的各种消息
	/var/log/cron 		//记录与cron计划任务相关的消息
	/var/log/maillog 		//记录邮件收发相关的消息
	/var/log/secure 		//记录与访问限制相关的安全消息
	tailf				//实时跟踪日志消息
	last -2			//最近登录成功的用户记录
	lastb -2			//最近登录失败的用户记录

日志的优先级
	0  emerg（紧急）   		//会导致主机系统不可用的情况
	1  alert（警告）        	//必须马上采取措施解决的问题
	2  crit（严重）	        //比较严重的情况
	3  err（错误）	       	//运行出现错误
	4  warning（提醒）      	//可能会影响系统功能的事件
	5  notice（注意）        	//不会影响系统但值得注意
	6  info（信息）	       	//一般信息
	7  debug（调试）          	//程序或系统调试信息等

journalctl常见用法
	journalctl | grep 关键词
	journalctl -u 服务名   [-p 优先级]
	journalctl -n 消息条数
	journalctl --since="yyyy-mm-dd HH:MM:SS" --

access.log访问日志详解
	$remote_addr		//来访客户端IP	
	$remote_user		//来访用户名	
	[$time_local]		//访问时间
	$request			//来访请求
	$status			//返回状态值
	$body_bytes_sent		//网页的大小
	$http_referer		//代表用户从那里来
	$http_user_agent		//来访用户信息

#########################################################################################
#########################################################################################
#########################################################################################

